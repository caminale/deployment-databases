---
- hosts: postgres
  become: yes
  gather_facts: no
  vars:
    versiondb: 9.5

  tasks:
  - name: ensure apt cache is up to date
    apt: update_cache=yes
  - name: ensure packages are installed
    apt: name={{item}}
    with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-psycopg2

  # permit to have permissions for become_user
  - name: install setfacl support
    become: yes
    apt: pkg=acl

- hosts: postgres
  become: yes
  gather_facts: no
  become_user: postgres

  vars:
    dbname: octo
    dbuser: camelot
    dbpassword: 0205
    versiondb: 9.5

  tasks:
  - name: Create a new database with name {{ dbname }}
    postgresql_db:
      name: "{{ dbname }}"

  - name: change listen_addresses to '*'
    lineinfile: dest=/etc/postgresql/{{ versiondb }}/main/postgresql.conf regexp="^#listen_addresses" line="listen_addresses = '*'" state=present backup=yes
    sudo: True
    notify: restart postgresql
    tags:
      - postgres

  - name: change listen_addresses to '*'
    lineinfile: dest=/etc/postgresql/{{ versiondb }}/main/pg_hba.conf
                regexp='host\s+all\s+all\s+127.0.0.1/32\s+md5'
                line='host all all 0.0.0.0/0 md5'
                insertbefore=BOF
    notify: restart postgresql

  - name: add extensions
    postgresql_ext :
      db: "{{ dbname }}"
      name: "pgcrypto"

  - name: Create  user and grant access to database
    postgresql_user:
      db: "{{ dbname }}"
      name: "{{ dbuser}}"
      password: "{{ dbpassword }}"
      role_attr_flags: SUPERUSER

  - name: ensure user has access to database
    postgresql_user: db={{ dbname }} name={{ dbuser }} password={{ dbpassword }}


  handlers:
  - name: restart postgresql
    service: name=postgresql state=restarted sleep=5

#  - name: ensure user does not have unnecessary privilege
#    postgresql_user: name={{ dbuser }} role_attr_flags=NOSUPERUSER,NOCREATEDB

#  - name: ensure no other user can access the database
#    postgresql_privs: db={{ dbname }} role=PUBLIC type=database priv=ALL state=absent

  - name: Copy backup sql
    copy:
      src:  backup.sql
      dest: /tmp/
      mode: 0777

- hosts: postgres
  become: yes
  gather_facts: no
  become_user: postgres
  vars:
     dbname: octo
     dbuser: camelot
     dbpassword: 0205
  tasks:
  - name: Copy backup sql
    postgresql_db:
      name: "{{ dbname }}"
      state: restore
      target: /tmp/backup.sql
...


